import { StrykerOptions } from '@stryker-mutator/api/core';
import { MutantResult } from '@stryker-mutator/api/report';
import { TestRunner } from '@stryker-mutator/api/test_runner';
import { Logger } from '@stryker-mutator/api/logging';
import { I } from '@stryker-mutator/util';
import { Checker } from '@stryker-mutator/api/check';
import { coreTokens } from '../di';
import StrictReporter from '../reporters/StrictReporter';
import { MutantTestCoverage } from '../mutants/findMutantTestCoverage';
import { MutationTestReportHelper } from '../reporters/MutationTestReportHelper';
import Timer from '../utils/Timer';
import { Pool, ConcurrencyTokenProvider } from '../concurrent';
import { Sandbox } from '../sandbox';
import { DryRunContext } from './3-DryRunExecutor';
export interface MutationTestContext extends DryRunContext {
    [coreTokens.testRunnerPool]: I<Pool<TestRunner>>;
    [coreTokens.timeOverheadMS]: number;
    [coreTokens.mutationTestReportHelper]: MutationTestReportHelper;
    [coreTokens.mutantsWithTestCoverage]: MutantTestCoverage[];
}
export declare class MutationTestExecutor {
    private readonly options;
    private readonly reporter;
    private readonly checkerPool;
    private readonly testRunnerPool;
    private readonly timeOverheadMS;
    private readonly matchedMutants;
    private readonly mutationTestReportHelper;
    private readonly sandbox;
    private readonly log;
    private readonly timer;
    private readonly concurrencyTokenProvider;
    static inject: ["options", "reporter", "checkerPool", "testRunnerPool", "timeOverheadMS", "mutantsWithTestCoverage", "mutationTestReportHelper", "sandbox", "logger", "timer", "concurrencyTokenProvider"];
    constructor(options: StrykerOptions, reporter: StrictReporter, checkerPool: I<Pool<Checker>>, testRunnerPool: I<Pool<TestRunner>>, timeOverheadMS: number, matchedMutants: readonly MutantTestCoverage[], mutationTestReportHelper: I<MutationTestReportHelper>, sandbox: I<Sandbox>, log: Logger, timer: I<Timer>, concurrencyTokenProvider: I<ConcurrencyTokenProvider>);
    execute(): Promise<MutantResult[]>;
    private executeIgnore;
    private executeNoCoverage;
    private executeCheck;
    private executeRunInTestRunner;
    private createMutantRunOptions;
    private logDone;
}
//# sourceMappingURL=4-MutationTestExecutor.d.ts.map